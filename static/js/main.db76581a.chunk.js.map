{"version":3,"sources":["components/UI/Card/index.jsx","hooks/useStyles.js","components/UI/Button/index.jsx","components/UI/ErrorMessage/index.jsx","store/actions/auth/index.js","store/actions/profile/index.js","store/actions/order/index.js","store/actions/registration/index.js","store/actions/index.js","hooks/useActions.js","store/selectors/index.js","components/LoginForm/index.js","components/RegistrationForm/index.js","components/OrderForm/index.jsx","components/OrderConfirm/index.js","constants/index.js","components/ProfileForm/index.jsx","routes/index.js","pages/Login/index.jsx","pages/Registration/index.jsx","pages/Order/index.jsx","pages/Profile/index.jsx","components/AuthLayout/index.jsx","components/Header/index.jsx","components/MapContainer/index.jsx","App.js","reportWebVitals.js","store/reducers/auth/index.js","store/reducers/profile/index.js","store/reducers/order/index.js","store/reducers/registration/index.js","store/reducers/index.js","api/index.js","store/sagas/auth/index.js","store/sagas/profile/index.js","store/sagas/order/index.js","store/sagas/registration/index.js","store/sagas/index.js","store/index.js","index.js"],"names":["Card","children","className","useStyles","makeStyles","gap","formControl","width","btnPreloader","position","top","left","marginRight","color","Button","onClick","disabled","preloader","classes","CircularProgress","size","ErrorMessage","AuthActionType","AuthActionCreators","setAuth","user","type","payload","login","logout","setError","message","ProfileActionType","ProfileActionCreators","fetchUserCard","data","setUserCard","card","fetchCard","setSuccess","boolean","OrderActionsType","OrderActionCreators","setAddresses","list","fetchAddressList","getRoutes","values","setRoutes","coordinates","RegistrationActionType","RegistrationActionCreators","setRegistration","fetchRegistration","allActionCreators","useActions","dispatch","useDispatch","bindActionCreators","getIsLoggedIn","createSelector","state","isLoggedIn","getIsRegister","isRegisterIn","getIsLoading","isLoading","getIsSuccess","isSuccess","getError","error","getCoordinates","getAddresses","addresses","getCard","LoginForm","useForm","register","handleSubmit","errors","formState","useSelector","auth","Portal","usePortal","bindTo","document","getElementById","console","log","onSubmit","FormControl","fullWidth","margin","InputLabel","htmlFor","Input","id","required","value","pattern","email","password","href","to","ROUTES_PATH","registration","Alert","severity","RegistrationForm","FormGroup","row","name","surname","OrderForm","order","useState","from","setFrom","setTo","handleChange","e","target","Select","labelId","MenuProps","anchorOrigin","vertical","horizontal","getContentAnchorEl","onChange","map","address","MenuItem","OrderConfirm","CONSTANTS","ACCESS_TOKEN","AUTH","IS_CARD","ProfileForm","profile","control","expiryDate","Date","setExpiryDate","cardName","setCardName","cardNumber","setCardNumber","cvc","cvcNumber","setCvcNumber","token","localStorage","getItem","rules","render","field","mask","maskChar","inputProps","minLength","utils","DateFnsUtils","DatePicker","autoOk","variant","openTo","views","label","format","minDate","ref","publicRoutes","path","exact","component","title","privateRoutes","history","useHistory","length","push","AuthLayout","src","process","alt","style","backgroundImage","Header","activeClassName","preventDefault","clear","MapContainer","mapContainer","useRef","lng","setLng","lat","setLat","zoom","setZoom","useEffect","mapbox","accessToken","current","Map","container","center","on","getCenter","toFixed","getZoom","flyTo","addLayer","source","properties","geometry","layout","paint","getLayer","removeLayer","removeSource","drawRoute","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","api","axios","create","baseURL","authorization","post","get","postCard","fetchAddresses","fetchRoutes","authorizationWorker","authorizationWatcher","setToken","setItem","action","call","success","put","takeEvery","sendCardWorker","getCardWorker","profileWatcher","setIsCard","hasOwnProperty","getAddressListWorker","getAddressListWatcher","getRoutesWorker","getRoutesWatcher","registrationWorker","registrationWatcher","rootWatcher","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","reducers","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","basename"],"mappings":"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","file":"static/js/main.db76581a.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss'\nimport PropTypes from \"prop-types\";\n\nexport const Card = ({children}) => {\n    return (\n        <div className=\"card\">\n            {children}\n        </div>\n    );\n};\n\nCard.propTypes = {\n    children: PropTypes.node\n}","import {makeStyles} from \"@material-ui/core\";\n\nexport const useStyles = makeStyles({\n    gap: {\n        gap: '0 24px'\n    },\n    formControl: {\n        width: 'calc(50% - 12px)'\n    },\n    btnPreloader: {\n        position: 'absolute',\n        top: 'calc(50% - 12.5px)',\n        left: 'calc(50% - 12.5px)',\n        marginRight: '16px',\n        color: '#FDBF5A',\n    }\n})","import React from 'react';\nimport './index.scss'\nimport {CircularProgress} from \"@material-ui/core\";\nimport {useStyles} from \"../../../hooks/useStyles\";\nimport PropTypes from \"prop-types\";\n\nexport const Button = ({children, onClick, disabled, preloader}) => {\n    const classes = useStyles()\n\n    return (\n        <button\n            onClick={onClick}\n            disabled={disabled}\n            className={`primary-btn ${disabled ? 'primary-btn--disabled' : ''}`}\n        >\n            {preloader ? <CircularProgress size={25} className={classes.btnPreloader}/> : null}\n            {children}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    children: PropTypes.node,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n    preloader: PropTypes.bool,\n}","import React from 'react';\nimport './index.scss'\nimport PropTypes from \"prop-types\";\n\nexport const ErrorMessage = ({children}) => {\n    return (\n        <span className=\"error-message\">\n            {children}\n        </span>\n    );\n};\n\nErrorMessage.propTypes = {\n    children: PropTypes.node\n}","export const AuthActionType = {\n    SET_AUTH: \"SET_AUTH\",\n    SET_USER: \"SET_USER\",\n    SET_ERROR: \"SET_ERROR\",\n    SET_IS_LOADING: \"SET_IS_LOADING\",\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n}\n\nexport const AuthActionCreators = {\n    setAuth: user => ({\n        type: AuthActionType.SET_AUTH,\n        payload: user\n    }),\n    login: () => ({type: AuthActionType.LOGIN}),\n    logout: () => ({type: AuthActionType.LOGOUT}),\n    setError: message => ({\n        type: AuthActionType.SET_ERROR,\n        payload: message\n    }),\n}","export const ProfileActionType = {\n    FETCH_USER_CARD: 'FETCH_USER_CARD',\n    FETCH_CARD: 'FETCH_CARD',\n    SET_CARD: 'SET_CARD',\n    SET_SUCCESS: 'SET_SUCCESS',\n    SET_ERROR: 'SET_ERROR',\n}\n\nexport const ProfileActionCreators = {\n    fetchUserCard: data => ({\n        type: ProfileActionType.FETCH_USER_CARD,\n        payload: data\n    }),\n    setUserCard: card => ({\n        type: ProfileActionType.SET_CARD,\n        payload: card\n    }),\n    fetchCard: () => ({type: ProfileActionType.FETCH_CARD}),\n    setSuccess: boolean => ({type: ProfileActionType.SET_SUCCESS, payload: boolean}),\n    setError: message => ({\n        type: ProfileActionType.SET_ERROR,\n        payload: message\n    })\n}","export const OrderActionsType = {\n    SET_ADDRESSES: 'SET_ADDRESSES',\n    FETCH_ADDRESSES: 'FETCH_ADDRESSES',\n    FETCH_ROUTES: 'FETCH_ROUTES',\n    SET_ROUTES: 'SET_ROUTES',\n}\n\nexport const OrderActionCreators = {\n    setAddresses: list => ({type: OrderActionsType.SET_ADDRESSES, payload: list}),\n    fetchAddressList: () => ({type: OrderActionsType.FETCH_ADDRESSES}),\n    getRoutes: values => ({type: OrderActionsType.FETCH_ROUTES, payload: values}),\n    setRoutes: coordinates => ({type: OrderActionsType.SET_ROUTES, payload: coordinates})\n}","export const RegistrationActionType = {\n    SET_REGISTRATION: 'SET_REGISTRATION',\n    FETCH_REGISTRATION: 'FETCH_REGISTRATION',\n    SET_ERROR: 'SET_ERROR',\n}\n\nexport const RegistrationActionCreators = {\n    setRegistration: values => ({type: RegistrationActionType.SET_REGISTRATION, payload: values}),\n    fetchRegistration: () => ({type: RegistrationActionType.FETCH_REGISTRATION}),\n    setError: message => ({type: RegistrationActionType.SET_ERROR, payload: message}),\n}","import {AuthActionCreators} from \"./auth\";\nimport {ProfileActionCreators} from \"./profile\";\nimport {OrderActionCreators} from \"./order\";\nimport {RegistrationActionCreators} from \"./registration\";\n\nexport const allActionCreators = {\n    ...AuthActionCreators,\n    ...ProfileActionCreators,\n    ...OrderActionCreators,\n    ...RegistrationActionCreators\n}","import {useDispatch} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {allActionCreators} from \"../store/actions\";\n\nexport const useActions = () => {\n    const dispatch = useDispatch()\n\n    return bindActionCreators(allActionCreators, dispatch)\n}","import {createSelector} from \"reselect\";\n\nexport const getIsLoggedIn = createSelector(\n    state => state.isLoggedIn,\n    isLoggedIn => isLoggedIn\n)\n\nexport const getIsRegister = createSelector(\n    state => state.isRegisterIn,\n    isRegisterIn => isRegisterIn\n)\n\nexport const getIsLoading = createSelector(\n    state => state.isLoading,\n    isLoading => isLoading\n)\n\nexport const getIsSuccess = createSelector(\n    state => state.isSuccess,\n    isSuccess => isSuccess\n)\n\nexport const getError = createSelector(\n    state => state.error,\n    error => error\n)\n\nexport const getCoordinates = createSelector(\n    state => state.coordinates,\n    coordinates => coordinates\n)\n\nexport const getAddresses = createSelector(\n    state => state.addresses,\n    addresses => addresses\n)\n\nexport const getCard = createSelector(\n    state => state.card,\n    card => card\n)","import React from 'react';\nimport {useForm} from \"react-hook-form\";\nimport {Button} from \"../UI/Button\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES_PATH} from \"../../routes\";\nimport {ErrorMessage} from \"../UI/ErrorMessage\";\nimport {useActions} from \"../../hooks/useActions\";\nimport {FormControl, Input, InputLabel} from \"@material-ui/core\";\nimport {useSelector} from \"react-redux\";\nimport {Alert} from \"@material-ui/lab\";\nimport usePortal from \"react-useportal\";\nimport {getError, getIsLoading} from \"../../store/selectors\";\n\nexport const LoginForm = () => {\n    const {register, handleSubmit, formState: {errors}} = useForm()\n    const {setAuth} = useActions()\n    const isLoading = useSelector(state => getIsLoading(state.auth))\n    const error = useSelector(state => getError(state.auth))\n    const {Portal} = usePortal({\n        bindTo: document && document.getElementById('alert-portal')\n    })\n\n    console.log(errors);\n\n    const onSubmit = data => {\n        setAuth(data)\n    }\n\n    return (\n        <>\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"form__title\">Войти</div>\n                <FormControl fullWidth={true} margin=\"normal\">\n                    <InputLabel htmlFor=\"email\">Email*</InputLabel>\n                    <Input\n                        id=\"email\"\n                        {...register(\"email\", {\n                            required: {value: true, message: 'Это поле обязательное'},\n                            pattern: {value: /^\\S+@\\S+$/i, message: 'Некорректный email'},\n                        })}\n                    />\n                    {errors.email && <ErrorMessage>{errors.email.message}</ErrorMessage>}\n                </FormControl>\n                <FormControl fullWidth={true} margin=\"normal\">\n                    <InputLabel htmlFor=\"password\">Пароль*</InputLabel>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        {...register(\"password\", {\n                            required: {value: true, message: 'Это поле обязательное'},\n                        })}\n                    />\n                    {errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n                </FormControl>\n                <a href=\"#\" className=\"form__restore-password\">Забыли пароль?</a>\n\n                <Button preloader={isLoading} disabled={isLoading}>Войти</Button>\n\n                <div className=\"form__redirect-btn\">\n                    Новый пользователь?\n                    <Link to={ROUTES_PATH.registration}>Регистрация</Link>\n                </div>\n            </form>\n            {error && <Portal><Alert severity=\"error\">{error}</Alert></Portal>}\n        </>\n\n    );\n};","import React from 'react';\nimport {useForm} from \"react-hook-form\";\nimport {Button} from \"../UI/Button\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES_PATH} from \"../../routes\";\nimport {ErrorMessage} from \"../UI/ErrorMessage\";\nimport {useActions} from \"../../hooks/useActions\";\nimport {FormControl, FormGroup, Input, InputLabel} from \"@material-ui/core\";\nimport {useStyles} from \"../../hooks/useStyles\";\nimport {useSelector} from \"react-redux\";\nimport {Alert} from \"@material-ui/lab\";\nimport usePortal from \"react-useportal\";\nimport {getError, getIsLoading, getIsRegister} from \"../../store/selectors\";\n\nexport const RegistrationForm = () => {\n    const {register, handleSubmit, formState: {errors}} = useForm()\n    const {setRegistration} = useActions()\n    const classes = useStyles()\n    const isRegisterIn = useSelector(state => getIsRegister(state.registration))\n    const isLoading = useSelector(state => getIsLoading(state.registration))\n    const error = useSelector(state => getError(state.registration))\n    const {Portal} = usePortal({\n        bindTo: document && document.getElementById('alert-portal')\n    })\n\n    const onSubmit = data => {\n        setRegistration(data)\n    }\n\n    return (\n        <>\n            <form className=\"form form--registration\" onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"form__title\">Регистрация</div>\n                <FormControl fullWidth={true} margin=\"normal\">\n                    <InputLabel htmlFor=\"email\">Email*</InputLabel>\n                    <Input\n                        id=\"email\"\n                        {...register(\"email\", {\n                            required: {value: true, message: 'Это поле обязательное'},\n                            pattern: {value: /^\\S+@\\S+$/i, message: 'Некорректный email'},\n                        })}\n                    />\n                    {errors.email && <ErrorMessage>{errors.email.message}</ErrorMessage>}\n                </FormControl>\n                <FormGroup row={true} className={classes.gap}>\n                    <FormControl margin=\"normal\" className={classes.formControl}>\n                        <InputLabel htmlFor=\"name\">Имя*</InputLabel>\n                        <Input\n                            id=\"name\"\n                            {...register(\"name\", {\n                                required: {value: true, message: 'Это поле обязательное'},\n                            })}\n                        />\n                        {errors.name && <ErrorMessage>{errors.name.message}</ErrorMessage>}\n                    </FormControl>\n                    <FormControl margin=\"normal\" className={classes.formControl}>\n                        <InputLabel htmlFor=\"surname\">Фамилия*</InputLabel>\n                        <Input\n                            id=\"surname\"\n                            {...register(\"surname\", {\n                                required: {value: true, message: 'Это поле обязательное'},\n                            })}\n                        />\n                        {errors.surname && <ErrorMessage>{errors.surname.message}</ErrorMessage>}\n                    </FormControl>\n                </FormGroup>\n                <FormControl fullWidth={true} margin=\"normal\">\n                    <InputLabel htmlFor=\"password\">Придумайте пароль*</InputLabel>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        {...register(\"password\", {\n                            required: {value: true, message: 'Это поле обязательное'},\n                        })}\n                    />\n                    {errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n                </FormControl>\n\n                <Button preloader={isLoading} disabled={isLoading}>Зарегистрироваться</Button>\n\n                <div className=\"form__redirect-btn\">\n                    Новый пользователь?\n                    <Link to={ROUTES_PATH.login}>Войти</Link>\n                </div>\n            </form>\n            {error && <Portal><Alert severity=\"error\">{error}</Alert></Portal>}\n            {isRegisterIn && <Portal><Alert severity=\"success\">Регистрация прошла успешно</Alert></Portal>}\n        </>\n    );\n};","import React, {useState} from 'react';\nimport {Card} from \"../UI/Card\";\nimport {useForm} from \"react-hook-form\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\nimport {Button} from \"../UI/Button\";\nimport {useSelector} from \"react-redux\";\nimport {useActions} from \"../../hooks/useActions\";\nimport {getAddresses, getIsLoading} from \"../../store/selectors\";\n\nexport const OrderForm = () => {\n    const {register, handleSubmit} = useForm()\n    const addresses = useSelector(state => getAddresses(state.order))\n    const isLoading = useSelector(state => getIsLoading(state.order))\n    const [from, setFrom] = useState('')\n    const [to, setTo] = useState('')\n    const {getRoutes} = useActions()\n\n    const handleChange = (e) => {\n        if (e.target.name === 'from') {\n            setFrom(e.target.value)\n        } else {\n            setTo(e.target.value)\n        }\n    }\n\n    const onSubmit = data => {\n        getRoutes(data);\n    }\n\n    return (\n        <Card>\n            <form className=\"form form--order\" onSubmit={handleSubmit(onSubmit)}>\n                <FormControl fullWidth={true} margin=\"normal\">\n                    <InputLabel id=\"from\">Откуда</InputLabel>\n                    <Select\n                        labelId=\"from\"\n                        id=\"from\"\n                        MenuProps={{\n                            anchorOrigin: {\n                                vertical: \"bottom\",\n                                horizontal: \"left\"\n                            },\n                            getContentAnchorEl: null\n                        }}\n                        {...register('from')}\n                        value={from}\n                        onChange={handleChange}\n                    >\n                        {addresses.map(address => (\n                            to !== address && <MenuItem key={address} value={address}>{address}</MenuItem>))\n                        }\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth={true} margin=\"normal\">\n                    <InputLabel id=\"to\">Куда</InputLabel>\n                    <Select\n                        labelId=\"to\"\n                        id=\"to\"\n                        MenuProps={{\n                            anchorOrigin: {\n                                vertical: \"bottom\",\n                                horizontal: \"left\"\n                            },\n                            getContentAnchorEl: null\n                        }}\n                        {...register('to')}\n                        value={to}\n                        onChange={handleChange}\n                    >\n                        {addresses.map(address => (\n                            from !== address && <MenuItem key={address} value={address}>{address}</MenuItem>))\n                        }\n                    </Select>\n                </FormControl>\n                <Button preloader={isLoading} disabled={!from || !to || isLoading}>Заказать</Button>\n            </form>\n        </Card>\n    );\n};","import React from 'react';\nimport {Card} from \"../UI/Card\";\nimport {Button} from \"../UI/Button\";\nimport {useActions} from \"../../hooks/useActions\";\n\nexport const OrderConfirm = () => {\n    const {setRoutes} = useActions()\n\n    const onNewOrder = () => {\n        setRoutes([])\n    }\n\n    return (\n        <Card>\n            <div className=\"order-confirm\">\n                <h2 className=\"order-confirm__title\">Заказ размещен</h2>\n                <p className=\"order-confirm__descr\">\n                    Ваше такси уже едет к вам. Прибудет приблизительно через 10 минут.\n                </p>\n                <Button onClick={onNewOrder}>Сделать новый заказ</Button>\n            </div>\n        </Card>\n    );\n};","const CONSTANTS = {\n    ACCESS_TOKEN: 'ACCESS_TOKEN',\n    AUTH: 'AUTH',\n    IS_CARD: 'IS_CARD',\n}\n\nexport default CONSTANTS","import React, {useState} from 'react';\nimport {FormControl, FormGroup, Input, InputLabel} from \"@material-ui/core\";\nimport {DatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport InputMask from \"react-input-mask\";\nimport {Button} from \"../UI/Button\";\nimport {ErrorMessage} from \"../UI/ErrorMessage\";\nimport {useActions} from \"../../hooks/useActions\";\nimport {useStyles} from \"../../hooks/useStyles\";\nimport CONSTANTS from \"../../constants\";\nimport {useSelector} from \"react-redux\";\nimport {getCard, getIsLoading} from \"../../store/selectors\";\n\nexport const ProfileForm = () => {\n    const card = useSelector(state => getCard(state.profile))\n    const isLoading = useSelector(state => getIsLoading(state.profile))\n    const {handleSubmit, formState: {errors}, control, register} = useForm()\n    const [expiryDate, setExpiryDate] = useState(card ? card.expiryDate : new Date())\n    const [cardName, setCardName] = useState(card ? card.cardName : '')\n    const [cardNumber, setCardNumber] = useState(card ? card.cardNumber : '')\n    const [cvcNumber, setCvcNumber] = useState(card ? card.cvc : '')\n    const {fetchUserCard} = useActions()\n    const classes = useStyles()\n\n    const onSubmit = data => {\n        data.token = localStorage.getItem(CONSTANTS.ACCESS_TOKEN)\n        fetchUserCard(data)\n    }\n\n    return (\n        <div className=\"profile__form\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <FormControl fullWidth={true} margin=\"normal\">\n                    <InputLabel htmlFor=\"cardName\">Имя владельца*</InputLabel>\n                    <Controller\n                        name=\"cardName\"\n                        control={control}\n                        rules={{required: {value: true, message: 'Это поле обязательное'}}}\n                        render={({field: {onChange}}) => (\n                            <Input\n                                id=\"cardName\"\n                                value={cardName}\n                                onChange={e => {\n                                    onChange(e.target.value)\n                                    setCardName(e.target.value)\n                                }}\n                            />\n                        )}\n                    />\n                    {errors.cardName && <ErrorMessage>{errors.cardName.message}</ErrorMessage>}\n                </FormControl>\n                <FormControl fullWidth={true} margin=\"normal\">\n                    <InputLabel htmlFor=\"cardNumber\">Номер карты*</InputLabel>\n                    <Controller\n                        control={control}\n                        render={({field: {onChange}}) => (\n                            <InputMask\n                                mask=\"9999 9999 9999 9999\"\n                                value={cardNumber}\n                                maskChar=\" \"\n                                onChange={e => {\n                                    onChange(e.target.value)\n                                    setCardNumber(e.target.value)\n                                }}\n                            >\n                                {inputProps => <Input id=\"cardNumber\" {...inputProps}/>}\n                            </InputMask>\n                        )}\n                        name=\"cardNumber\"\n                        rules={{\n                            required: {value: true, message: 'Это поле обязательное'},\n                            minLength: {value: 16, message: 'Должно быть минимум 16 символа'}\n                        }}\n                    />\n                    {errors.cardNumber && <ErrorMessage>{errors.cardNumber.message}</ErrorMessage>}\n                </FormControl>\n                <FormGroup row={true} className={classes.gap}>\n                    <FormControl margin=\"normal\" className={classes.formControl}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Controller\n                                name=\"expiryDate\"\n                                control={control}\n                                rules={{required: {value: true, message: 'Это поле обязательное'}}}\n                                render={({field: {onChange}}) => (\n                                    <DatePicker\n                                        autoOk={true}\n                                        variant=\"dialog\"\n                                        openTo=\"year\"\n                                        views={[\"year\", \"month\"]}\n                                        label=\"MM/YY\"\n                                        format=\"MM/yy\"\n                                        value={expiryDate}\n                                        minDate={new Date()}\n                                        onChange={(value) => {\n                                            onChange(value)\n                                            setExpiryDate(value)\n                                        }}\n                                    />\n                                )}\n                            />\n                        </MuiPickersUtilsProvider>\n                        {errors.expiryDate && <ErrorMessage>{errors.expiryDate.message}</ErrorMessage>}\n                    </FormControl>\n                    <FormControl margin=\"normal\" className={classes.formControl}>\n                        <InputLabel htmlFor=\"cvc\">CVC*</InputLabel>\n                        <Controller\n                            control={control}\n                            render={({field: {onChange, ref}}) => (\n                                <InputMask\n                                    mask=\"999\"\n                                    value={cvcNumber}\n                                    maskChar=\" \"\n                                    onChange={e => {\n                                        onChange(e.target.value)\n                                        setCvcNumber(e.target.value)\n                                    }}\n                                >\n                                    {() => <Input id=\"cvc\"/>}\n                                </InputMask>\n                            )}\n                            name=\"cvc\"\n                            rules={{\n                                required: {value: true, message: 'Это поле обязательное'},\n                                minLength: {value: 3, message: 'Должно быть минимум 3 символа'}\n                            }}\n                        />\n                        {errors.cvc && <ErrorMessage>{errors.cvc.message}</ErrorMessage>}\n                    </FormControl>\n                </FormGroup>\n                <Button preloader={isLoading} disabled={isLoading}>Сохранить</Button>\n            </form>\n        </div>\n    );\n};","import {Login} from \"../pages/Login\";\nimport {Registration} from \"../pages/Registration\";\nimport {Order} from \"../pages/Order\";\nimport {Profile} from \"../pages/Profile\";\n\nexport const ROUTES_PATH = {\n    login: '/login',\n    registration: '/registration',\n    order: '/main/order',\n    profile: '/main/profile',\n}\n\nexport const publicRoutes = [\n    {\n        path: ROUTES_PATH.login,\n        exact: true,\n        component: Login,\n    },\n    {\n        path: ROUTES_PATH.registration,\n        exact: false,\n        component: Registration,\n    }\n]\n\nexport const privateRoutes = [\n    {\n        path: ROUTES_PATH.order,\n        exact: true,\n        component: Order,\n    },\n    {\n        path: ROUTES_PATH.profile,\n        exact: false,\n        component: Profile,\n    }\n]","import React from 'react';\nimport {Card} from \"../../components/UI/Card\";\nimport {LoginForm} from \"../../components/LoginForm\";\n\nexport const Login = () => {\n    return (\n        <Card title={'Войти'}>\n            <LoginForm />\n        </Card>\n    );\n};","import React from 'react';\nimport {Card} from \"../../components/UI/Card\";\nimport {RegistrationForm} from \"../../components/RegistrationForm\";\n\nexport const Registration = () => {\n    return (\n        <Card title={'Регистрация'}>\n            <RegistrationForm/>\n        </Card>\n    );\n};","import React, {useState} from 'react';\nimport './index.scss';\nimport {OrderForm} from \"../../components/OrderForm\";\nimport {useActions} from \"../../hooks/useActions\";\nimport {useSelector} from \"react-redux\";\nimport {OrderConfirm} from \"../../components/OrderConfirm\";\nimport {Card} from \"../../components/UI/Card\";\nimport {Button} from \"../../components/UI/Button\";\nimport {useHistory} from \"react-router-dom\";\nimport CONSTANTS from \"../../constants\";\nimport {getCard, getCoordinates} from \"../../store/selectors\";\n\nexport const Order = () => {\n    const {fetchAddressList, fetchCard} = useActions()\n    const coordinates = useSelector(state => getCoordinates(state.order))\n    const card = useSelector(state => getCard(state.profile))\n    const history = useHistory()\n\n    useState(() => {\n        fetchAddressList()\n        fetchCard()\n    }, [])\n\n    return (\n        <div className=\"order\">\n            {card || localStorage.getItem(CONSTANTS.IS_CARD)\n                ? coordinates.length === 0\n                    ? <OrderForm/>\n                    : <OrderConfirm/>\n                : <Card>\n                    <div className=\"order-add\">\n                        <h2 className=\"order-add__title\">Заполните профиль</h2>\n                        <p className=\"order-add__descr\">\n                            У Вас в профиле на заполнены данные по карте. После заполнения, Вы сможете заказать такси\n                        </p>\n                        <Button onClick={() => history.push('/main/profile')}>Перейти в профиль</Button>\n                    </div>\n                </Card>\n            }\n        </div>\n    );\n};","import React from 'react';\nimport './index.scss';\nimport {Card} from \"../../components/UI/Card\";\nimport {ProfileForm} from \"../../components/ProfileForm\";\nimport {useSelector} from \"react-redux\";\nimport {Button} from \"../../components/UI/Button\";\nimport {useHistory} from \"react-router-dom\";\nimport {useActions} from \"../../hooks/useActions\";\nimport {getIsSuccess} from \"../../store/selectors\";\n\nexport const Profile = () => {\n    const isSuccess = useSelector(state => getIsSuccess(state.profile))\n    const history = useHistory()\n    const {setSuccess} = useActions()\n\n    return (\n        <div className=\"profile\">\n            <div className={!isSuccess ? 'profile__form-container' : 'profile__alert'}>\n                <Card>\n                    <div className=\"profile__content\">\n                        <h2 className=\"profile__title\">Профиль</h2>\n                        <p className=\"profile__description\">\n                            {!isSuccess\n                                ? 'Ввдеите платежные данные'\n                                : 'Платёжные данные обновлены. Теперь вы можете заказывать такси.'\n                            }\n                        </p>\n                        {!isSuccess\n                            ? <ProfileForm/>\n                            : <Button onClick={() => {\n                                history.push('/main/order')\n                                setSuccess(false)\n                            }}>\n                                Перейти на карту\n                            </Button>\n                        }\n                    </div>\n                </Card>\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport './index.scss';\nimport PropTypes from \"prop-types\";\n\nexport const AuthLayout = ({children}) => {\n    return (\n        <div className={'auth-container'}>\n            <div className=\"auth-lc\">\n                <img src={`${process.env.PUBLIC_URL}/images/logo-v.svg`} alt=\"Loft taxi\" className=\"auth-logo\"/>\n            </div>\n            <div className=\"auth-rc\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/images/map.png)`}}>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nAuthLayout.propTypes = {\n    children: PropTypes.node\n}","import React from 'react';\nimport './index.scss'\nimport {NavLink} from \"react-router-dom\";\nimport {useActions} from \"../../hooks/useActions\";\n\nexport const Header = () => {\n    const {logout} = useActions()\n\n    const handleLogout = e => {\n        e.preventDefault()\n        logout()\n        localStorage.clear()\n    }\n\n    return (\n        <header className=\"header\">\n            <nav className=\"navbar\">\n                <div className=\"navbar__brand\">\n                    <img src={`${process.env.PUBLIC_URL}/images/logo-h.svg`} alt=\"Loft taxi\"/>\n                </div>\n                <ul className=\"navbar__list\">\n                    <li className=\"navbar__item\">\n                        <NavLink\n                            to=\"/main/order\"\n                            activeClassName=\"navbar__link--active\"\n                            className=\"navbar__link\"\n                        >\n                            Карта\n                        </NavLink>\n                    </li>\n                    <li className=\"navbar__item\">\n                        <NavLink\n                            to=\"/main/profile\"\n                            activeClassName=\"navbar__link--active\"\n                            className=\"navbar__link\"\n                        >\n                            Профиль\n                        </NavLink>\n                    </li>\n                    <li className=\"navbar__item\">\n                        <a href=\"#\" onClick={handleLogout} className=\"navbar__link\">Выйти</a>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n};","import React, {useEffect, useRef, useState} from 'react';\nimport './index.scss';\nimport mapbox from \"mapbox-gl\";\nimport {useSelector} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getCoordinates} from \"../../store/selectors\";\n\nexport const MapContainer = ({children}) => {\n    const mapContainer = useRef(null)\n    const map = useRef(null)\n    const [lng, setLng] = useState(30.319814);\n    const [lat, setLat] = useState(59.886215);\n    const [zoom, setZoom] = useState(9);\n    const coordinates = useSelector(state => getCoordinates(state.order))\n\n    const drawRoute = (map, coordinates) => {\n        if(coordinates.length !== 0) {\n            map.flyTo({\n                center: coordinates[0],\n                zoom: 15\n            });\n\n            map.addLayer({\n                id: \"route\",\n                type: \"line\",\n                source: {\n                    type: \"geojson\",\n                    data: {\n                        type: \"Feature\",\n                        properties: {},\n                        geometry: {\n                            type: \"LineString\",\n                            coordinates\n                        }\n                    }\n                },\n                layout: {\n                    \"line-join\": \"round\",\n                    \"line-cap\": \"round\"\n                },\n                paint: {\n                    \"line-color\": \"#ffc617\",\n                    \"line-width\": 8\n                }\n            });\n        } else {\n            if(map.getLayer('route')) {\n                map.removeLayer('route')\n                map.removeSource('route')\n                map.flyTo({\n                    center: [lng, lat],\n                    zoom: 9,\n                })\n            }\n        }\n    };\n\n    useEffect(() => {\n        mapbox.accessToken = process.env.REACT_APP_MAPBOX_TOKEN\n\n        if (map.current) return;\n        map.current = new mapbox.Map({\n            container: mapContainer.current,\n            style: 'mapbox://styles/mapbox/light-v10',\n            center: [lng, lat],\n            zoom: zoom\n        });\n    });\n\n    useEffect(() => {\n        if (!map.current) return;\n        map.current.on('move', () => {\n            setLng(map.current.getCenter().lng.toFixed(4));\n            setLat(map.current.getCenter().lat.toFixed(4));\n            setZoom(map.current.getZoom().toFixed(2));\n        });\n    });\n\n    useEffect(() => {\n        drawRoute(map.current, coordinates)\n    }, [coordinates])\n\n    return (\n        <main className=\"map-layout\">\n            {children}\n            <div ref={mapContainer} className=\"map-container\"/>\n        </main>\n    );\n};\n\nMapContainer.propTypes = {\n    children: PropTypes.node\n}","import React, {useEffect} from 'react';\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport {privateRoutes, publicRoutes, ROUTES_PATH} from \"./routes\";\nimport {AuthLayout} from \"./components/AuthLayout\";\nimport {Header} from \"./components/Header\";\nimport {useSelector} from \"react-redux\";\nimport {MapContainer} from \"./components/MapContainer\";\nimport {useActions} from \"./hooks/useActions\";\nimport CONSTANTS from \"./constants\";\nimport {getIsLoggedIn} from \"./store/selectors\";\n\nexport const App = () => {\n    const isLoggedIn = useSelector(state => getIsLoggedIn(state.auth))\n    const {login} = useActions()\n\n    useEffect(() => {\n        if (localStorage.getItem(CONSTANTS.AUTH)) {\n            login()\n        }\n    }, [])\n\n    return (\n        <>\n            {\n                isLoggedIn ?\n                    <>\n                        <Header/>\n                        <MapContainer>\n                            <Switch>\n                                {privateRoutes.map(({path, exact, component}) => (\n                                    <Route key={path} path={path} exact={exact} component={component}/>\n                                ))}\n                                <Redirect to={ROUTES_PATH.order}/>\n                            </Switch>\n                        </MapContainer>\n                    </>\n                    :\n                    <AuthLayout>\n                        <Switch>\n                            {publicRoutes.map(({path, exact, component}) => (\n                                <Route key={path} path={path} exact={exact} component={component}/>\n                            ))}\n                            <Redirect to={ROUTES_PATH.login}/>\n                        </Switch>\n                    </AuthLayout>\n            }\n        </>\n    );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {AuthActionType} from \"../../actions/auth\";\n\nconst initialState = {\n    isLoggedIn: false,\n    isLoading: false,\n    error: null,\n}\n\nexport const auth = (state = initialState, {type, payload}) => {\n    switch (type) {\n        case AuthActionType.SET_AUTH:\n            return {...state, isLoading: true}\n        case AuthActionType.LOGIN:\n            return {...state, isLoggedIn: true, isLoading: false, error: null}\n        case AuthActionType.LOGOUT:\n            return {...state, isLoggedIn: false}\n        case AuthActionType.SET_ERROR:\n            return {...state, error: payload, isLoading: false}\n        default:\n            return state;\n    }\n}","import {ProfileActionType} from \"../../actions/profile\";\n\nconst initialState = {\n    card: null,\n    isSuccess: false,\n    error: '',\n    isLoading: false,\n}\n\nexport const profile = (state = initialState, {type, payload}) => {\n    switch (type) {\n        case ProfileActionType.FETCH_USER_CARD:\n            return {...state, isLoading: true}\n        case ProfileActionType.SET_SUCCESS:\n            return {...state, isSuccess: payload, isLoading: false}\n        case ProfileActionType.SET_ERROR:\n            return {...state, error: payload}\n        case ProfileActionType.SET_CARD:\n            return {...state, card: payload}\n        default:\n            return state\n    }\n}","import {OrderActionsType} from \"../../actions/order\";\n\n\nconst initialState = {\n    addresses: [],\n    coordinates: [],\n    isLoading: false,\n}\n\nexport const order = (state = initialState, {type, payload}) => {\n    switch (type) {\n        case OrderActionsType.FETCH_ROUTES:\n            return {...state, isLoading: true}\n        case OrderActionsType.SET_ADDRESSES:\n            return {...state, addresses: payload}\n        case OrderActionsType.SET_ROUTES:\n            return {...state, coordinates: payload, isLoading: false}\n        default:\n            return state\n    }\n}","import {RegistrationActionType} from \"../../actions/registration\";\n\nconst initialState = {\n    isRegisterIn: false,\n    isLoading: false,\n    error: null,\n}\n\nexport const registration = (state = initialState, {type, payload}) => {\n    switch (type) {\n        case RegistrationActionType.SET_REGISTRATION:\n            return {...state, isLoading: true}\n        case RegistrationActionType.FETCH_REGISTRATION:\n            return {...state, isRegisterIn: true, isLoading: false, error: null}\n        case RegistrationActionType.SET_ERROR:\n            return {...state, error: payload, isLoading: false, isRegisterIn: false}\n        default:\n            return state\n    }\n}","import {auth} from \"./auth\";\nimport {profile} from \"./profile\";\nimport {order} from \"./order\";\nimport {registration} from \"./registration\";\n\nexport default {auth, profile, order, registration}","import axios from \"axios\";\nimport CONSTANTS from \"../constants\";\n\nconst api = axios.create({\n    baseURL: `${process.env.REACT_APP_API_URL}`,\n});\n\nexport const authorization = (data) => {\n    return api.post('/auth', data)\n}\n\nexport const registration = (data) => {\n    return api.post('/register', data)\n}\n\nexport const fetchCard = () => {\n    return api.get(`card?token=${localStorage.getItem(CONSTANTS.ACCESS_TOKEN)}`)\n}\n\nexport const postCard = (data) => {\n    return api.post('/card', data)\n}\n\nexport const fetchAddresses = () => {\n    return api.get('/addressList')\n}\n\nexport const fetchRoutes = values => {\n    return api.get(`/route?address1=${values.from}&address2=${values.to}`)\n}","import {put, takeEvery, call} from 'redux-saga/effects';\nimport {authorization} from \"../../../api\";\nimport {AuthActionCreators, AuthActionType} from \"../../actions/auth\";\nimport CONSTANTS from \"../../../constants\";\n\nconst setToken = (token) => {\n    localStorage.setItem(CONSTANTS.ACCESS_TOKEN, token)\n    localStorage.setItem(CONSTANTS.AUTH, 'true')\n}\n\nfunction* authorizationWorker(action) {\n    const {data} = yield call(authorization, action.payload)\n\n    if(data.success) {\n        yield call(setToken, data.token)\n        yield put(AuthActionCreators.login())\n    } else {\n        yield put(AuthActionCreators.setError(data.error))\n    }\n}\n\nexport function* authorizationWatcher() {\n    yield takeEvery(AuthActionType.SET_AUTH, authorizationWorker)\n}","import {put, takeEvery, call} from 'redux-saga/effects';\nimport {fetchCard, postCard} from \"../../../api\";\nimport {ProfileActionCreators, ProfileActionType} from \"../../actions/profile\";\nimport CONSTANTS from \"../../../constants\";\n\nconst setIsCard = () => {\n    localStorage.setItem(CONSTANTS.IS_CARD, 'true')\n}\n\nfunction* sendCardWorker(action) {\n    try {\n        const {data} = yield call(postCard, action.payload)\n\n        if (data.success) {\n            yield put(ProfileActionCreators.setSuccess(true))\n            yield call(setIsCard)\n        } else {\n            yield put(ProfileActionCreators.setError(data.error))\n        }\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* getCardWorker() {\n    try {\n        const {data} = yield call(fetchCard)\n\n        yield call(setIsCard)\n\n        if (!data.hasOwnProperty('success')) {\n            yield put(ProfileActionCreators.setUserCard(data))\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nexport function* profileWatcher() {\n    yield takeEvery(ProfileActionType.FETCH_USER_CARD, sendCardWorker)\n    yield takeEvery(ProfileActionType.FETCH_CARD, getCardWorker)\n}","import {put, takeEvery, call} from 'redux-saga/effects';\nimport {fetchAddresses, fetchRoutes} from \"../../../api\";\nimport {OrderActionCreators, OrderActionsType} from \"../../actions/order\";\n\nfunction* getAddressListWorker() {\n    try {\n        const {data} = yield call(fetchAddresses)\n        yield put(OrderActionCreators.setAddresses(data.addresses))\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nexport function* getAddressListWatcher() {\n    yield takeEvery(OrderActionsType.FETCH_ADDRESSES, getAddressListWorker)\n}\n\nfunction* getRoutesWorker(action) {\n    try {\n        const {data} = yield call(fetchRoutes, action.payload)\n        yield put(OrderActionCreators.setRoutes(data))\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport function* getRoutesWatcher() {\n    yield takeEvery(OrderActionsType.FETCH_ROUTES, getRoutesWorker)\n}","import {put, takeEvery, call} from 'redux-saga/effects';\nimport {RegistrationActionCreators, RegistrationActionType} from \"../../actions/registration\";\nimport {registration} from \"../../../api\";\n\nfunction* registrationWorker({payload}) {\n    try {\n        const {data} = yield call(registration, payload)\n\n        if(data.success) {\n            yield put(RegistrationActionCreators.fetchRegistration())\n        } else {\n            yield put(RegistrationActionCreators.setError(data.error))\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nexport function* registrationWatcher() {\n    yield takeEvery(RegistrationActionType.SET_REGISTRATION, registrationWorker)\n}","import {all} from 'redux-saga/effects';\nimport {authorizationWatcher} from \"./auth\";\nimport {profileWatcher} from \"./profile\";\nimport {getAddressListWatcher, getRoutesWatcher} from \"./order\";\nimport {registrationWatcher} from \"./registration\";\n\nexport function* rootWatcher() {\n    yield all([\n        authorizationWatcher(),\n        profileWatcher(),\n        getAddressListWatcher(),\n        getRoutesWatcher(),\n        registrationWatcher()\n    ])\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from \"./reducers\";\nimport {rootWatcher} from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst rootReducer = combineReducers(reducers)\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)))\n\nsagaMiddleware.run(rootWatcher)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css'\nimport './scss/index.scss';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store} basename={process.env.PUBLIC_URL}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}